[importlinter]
root_package = backend
include_external_packages = True

# ==========================================
# Contract 1: Modules must be independent
# ==========================================
[importlinter:contract:modules_isolation]
name = Feature modules may not import each other directly
type = independence
modules =
    backend.modules.documents
    backend.modules.pm_templates
    backend.modules.risk_inspections
ignore_imports =
    backend.modules.*.migrations.*

# ==========================================
# Contract 2: Modules can only use public interfaces
# ==========================================
[importlinter:contract:public_interface_only]
name = Cross-module imports must use public interfaces
type = forbidden
source_modules =
    backend.modules.documents
    backend.modules.pm_templates
    backend.modules.risk_inspections
forbidden_modules =
    backend.modules.*.services
    backend.modules.*.models
    backend.modules.*.views
    backend.modules.*.serializers
    backend.modules.*.tasks
allow_indirect_imports = False
ignore_imports =
    backend.modules.*.public.*
    backend.modules.*.migrations.*

# ==========================================
# Contract 3: Core modules are foundation only
# ==========================================
[importlinter:contract:core_no_app_imports]
name = Core modules must not import from feature modules
type = forbidden
source_modules =
    backend.core
forbidden_modules =
    backend.modules
    backend.accounts

# ==========================================
# Contract 4: Layered architecture
# ==========================================
[importlinter:contract:layers]
name = Respect layer boundaries (views -> services -> models)
type = layers
layers =
    backend.modules.*.views
    backend.modules.*.serializers
    backend.modules.*.services
    backend.modules.*.models
ignore_imports =
    backend.modules.*.migrations.*
