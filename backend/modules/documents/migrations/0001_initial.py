# Generated by Django 5.1.3 on 2025-09-01 00:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Document",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("original_name", models.CharField(max_length=255)),
                ("nickname", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("word", "Microsoft Word"),
                            ("excel", "Microsoft Excel"),
                            ("pdf", "PDF"),
                            ("image", "Image"),
                            ("csv", "CSV"),
                            ("text", "Text"),
                            ("generic", "Generic"),
                        ],
                        default="generic",
                        max_length=20,
                    ),
                ),
                ("mime_type", models.CharField(max_length=100)),
                ("file_size", models.BigIntegerField()),
                ("file_extension", models.CharField(max_length=10)),
                ("s3_key", models.CharField(max_length=500, unique=True)),
                ("s3_bucket", models.CharField(max_length=255)),
                ("s3_version_id", models.CharField(blank=True, max_length=255)),
                ("is_archived", models.BooleanField(default=False)),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                ("search_vector", models.TextField(blank=True)),
                ("ai_processed", models.BooleanField(default=False)),
                ("ai_processed_at", models.DateTimeField(blank=True, null=True)),
                ("ai_metadata", models.JSONField(blank=True, default=dict)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_set",
                        to="core.account",
                    ),
                ),
            ],
            options={
                "db_table": "documents_documents",
                "ordering": ["nickname", "original_name"],
            },
        ),
        migrations.CreateModel(
            name="DocumentShare",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("revoked", "Revoked"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("can_download", models.BooleanField(default=True)),
                ("can_share", models.BooleanField(default=False)),
                ("can_edit", models.BooleanField(default=False)),
                ("shared_at", models.DateTimeField(auto_now_add=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("message", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="documents.document",
                    ),
                ),
                (
                    "shared_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents_shared_by_me",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents_shared_with_me",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_set",
                        to="core.account",
                    ),
                ),
            ],
            options={
                "db_table": "documents_shares",
            },
        ),
        migrations.CreateModel(
            name="Folder",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="documents.folder",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_set",
                        to="core.account",
                    ),
                ),
            ],
            options={
                "db_table": "documents_folders",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="document",
            name="folder",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documents",
                to="documents.folder",
            ),
        ),
        migrations.CreateModel(
            name="FolderUserState",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("is_expanded", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_states",
                        to="documents.folder",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_set",
                        to="core.account",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="folder_states",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "documents_folder_states",
            },
        ),
        migrations.CreateModel(
            name="ShareNotification",
            fields=[
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("share_received", "Document Shared With You"),
                            ("share_accepted", "Share Accepted"),
                            ("share_rejected", "Share Rejected"),
                            ("share_revoked", "Share Revoked"),
                        ],
                        max_length=30,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "document_share",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="documents.documentshare",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="document_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_set",
                        to="core.account",
                    ),
                ),
            ],
            options={
                "db_table": "documents_notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="documentshare",
            index=models.Index(
                fields=["tenant", "shared_with", "status"], name="documents_s_tenant__a6da6c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="documentshare",
            index=models.Index(fields=["shared_at"], name="documents_s_shared__f1c524_idx"),
        ),
        migrations.AddIndex(
            model_name="documentshare",
            index=models.Index(fields=["expires_at"], name="documents_s_expires_0cf738_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="documentshare",
            unique_together={("document", "shared_with")},
        ),
        migrations.AddIndex(
            model_name="folder",
            index=models.Index(fields=["tenant", "parent"], name="documents_f_tenant__03a26d_idx"),
        ),
        migrations.AddIndex(
            model_name="folder",
            index=models.Index(fields=["created_at"], name="documents_f_created_abf28e_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="folder",
            unique_together={("tenant", "parent", "name")},
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["tenant", "folder"], name="documents_d_tenant__a3438c_idx"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["created_at"], name="documents_d_created_bd50af_idx"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["created_by"], name="documents_d_created_fea8b8_idx"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["file_type"], name="documents_d_file_ty_cd2d55_idx"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["is_archived"], name="documents_d_is_arch_4d9a74_idx"),
        ),
        migrations.AddIndex(
            model_name="folderuserstate",
            index=models.Index(fields=["user", "folder"], name="documents_f_user_id_a17905_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="folderuserstate",
            unique_together={("user", "folder")},
        ),
        migrations.AddIndex(
            model_name="sharenotification",
            index=models.Index(
                fields=["tenant", "recipient", "is_read"], name="documents_n_tenant__27daeb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sharenotification",
            index=models.Index(fields=["created_at"], name="documents_n_created_966c87_idx"),
        ),
    ]
